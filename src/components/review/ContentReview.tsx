/**
 * Content Review component for Ether Excel
 * Displays AI-generated topics, narratives, and questions for review
 */
import React, { useState } from 'react';
import { ChevronDown, ChevronUp, CheckCircle, Book, MessageSquare } from 'lucide-react';
import { Card, CardContent, CardDescription, CardHeader, CardTitle, CardFooter } from '../ui/Card';
import Button from '../ui/Button';
import { useAppContext } from '../../context/AppContext';

const ContentReview: React.FC = () => {
  const { topics, questions, setView } = useAppContext();
  const [expandedTopic, setExpandedTopic] = useState<string | null>(topics[0]?.id || null);

  const handleTopicToggle = (topicId: string) => {
    setExpandedTopic(expandedTopic === topicId ? null : topicId);
  };

  const handleLaunch = () => {
    setView('launch');
  };

  return (
    <div className="max-w-4xl mx-auto">
      <Card>
        <CardHeader>
          <CardTitle>Review Generated Content</CardTitle>
          <CardDescription>
            Review the topics, narratives, and questions generated by our AI
          </CardDescription>
        </CardHeader>
        <CardContent>
          <div className="space-y-4">
            {topics.map((topic, index) => {
              const topicQuestions = questions[topic.id] || [];
              const isExpanded = expandedTopic === topic.id;
              
              return (
                <div 
                  key={topic.id} 
                  className="border border-gray-200 rounded-lg overflow-hidden"
                >
                  <div 
                    className={`flex items-center justify-between p-4 cursor-pointer ${
                      isExpanded ? 'bg-[#EEF4FF]' : 'bg-white hover:bg-gray-50'
                    }`}
                    onClick={() => handleTopicToggle(topic.id)}
                  >
                    <div className="flex items-center space-x-3">
                      <div className={`w-8 h-8 rounded-full flex items-center justify-center ${
                        isExpanded ? 'bg-[#3A7AFE] text-white' : 'bg-gray-100 text-gray-500'
                      }`}>
                        {index + 1}
                      </div>
                      <h3 className="font-medium">{topic.topic_name}</h3>
                    </div>
                    <div className="flex items-center space-x-4">
                      <span className="text-sm text-gray-500">
                        {topicQuestions.length} questions
                      </span>
                      {isExpanded ? 
                        <ChevronUp className="w-5 h-5 text-gray-400" /> : 
                        <ChevronDown className="w-5 h-5 text-gray-400" />
                      }
                    </div>
                  </div>
                  
                  {isExpanded && (
                    <div className="p-4 bg-white border-t border-gray-200">
                      <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                        <div>
                          <div className="mb-4">
                            <div className="flex items-center space-x-2 text-[#3A7AFE] mb-2">
                              <Book className="w-4 h-4" />
                              <h4 className="font-medium">Topic Description</h4>
                            </div>
                            <p className="text-sm text-gray-600">{topic.topic_coverage}</p>
                          </div>
                          
                          <div>
                            <div className="flex items-center space-x-2 text-[#3A7AFE] mb-2">
                              <MessageSquare className="w-4 h-4" />
                              <h4 className="font-medium">Narrative</h4>
                            </div>
                            <div className="bg-[#EEF4FF] p-3 rounded-md">
                              <p className="text-sm text-gray-600 italic">"{topic.topic_narrative}"</p>
                            </div>
                          </div>
                        </div>
                        
                        <div>
                          <div className="flex items-center space-x-2 text-[#3A7AFE] mb-3">
                            <CheckCircle className="w-4 h-4" />
                            <h4 className="font-medium">Questions</h4>
                          </div>
                          
                          <div className="space-y-4">
                            {topicQuestions.map((question, qIndex) => (
                              <div 
                                key={question.id} 
                                className="bg-gray-50 p-3 rounded-md"
                              >
                                <p className="font-medium text-sm mb-2">
                                  {qIndex + 1}. {question.question_stem}
                                </p>
                                <div className="space-y-1 ml-4">
                                  {[
                                    { id: 'A', text: question.option_a },
                                    { id: 'B', text: question.option_b },
                                    { id: 'C', text: question.option_c },
                                    { id: 'D', text: question.option_d }
                                  ].map((option) => (
                                    <div 
                                      key={option.id} 
                                      className={`text-sm p-1 rounded ${
                                        question.correct_option === option.id ? 'text-green-700 bg-green-50' : ''
                                      }`}
                                    >
                                      {option.id}. {option.text}
                                      {question.correct_option === option.id && ' âœ“'}
                                    </div>
                                  ))}
                                </div>
                              </div>
                            ))}
                          </div>
                        </div>
                      </div>
                    </div>
                  )}
                </div>
              );
            })}
          </div>
        </CardContent>
        <CardFooter className="flex justify-between">
          <Button variant="outline" onClick={() => setView('processing')}>
            Back to Processing
          </Button>
          <Button onClick={handleLaunch}>
            Launch Game Session
          </Button>
        </CardFooter>
      </Card>
    </div>
  );
};

export default ContentReview;